<EditForm Model="student" OnValidSubmit="OnValidSubmit">
    <div class="container">
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    <label for="name">Name</label>
                    <InputText class="form-control" id="name" @bind-Value="@student.Name" />
                </div>
                <div class="form-group">
                    <label for="AdmissionDate">Admission Date</label>
                    <InputDate class="form-control" id="AdmissionDate" @bind-Value="@student.AdmissionDate" />
                </div>
                <div class="form-check">
                    <InputCheckbox class="form-check-input" id="IsActive" @bind-Value="@student.IsActive" />
                    <label for="isActive">Active?</label>
                </div>
                <div class="form-control-file my-2">
                    @if (student.ImageUrl == null)
                    {
                        <img src="./noimage.png" height="80" width="80" />
                    }
                    else
                    {
                        <img src="@student.ImageUrl" height="80" width="80" />
                    }
                    <InputFile src="@student.ImageUrl" OnChange="OnFileChange" class="form-control" accept=".png, .jpg, .jepg" />
                </div>

                <div class="form-group">
                    <button class="btn btn-outline-secondary btn-sm" type="submit">Send</button>
                    <button type="button" class="btn btn-outline-danger btn-sm" @onclick="Clear">Clear</button>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <button @onclick="@(()=>student.Modules.Add(new Modules()))" type="button" class="btn btn-outline-secondary btn-sm">Add</button>
                </div>
                <table class="table table-bordered table-striped">
                    <thead>
                        <tr>
                            <th>Sl.</th>
                            <th>Module Name</th>
                            <th>Obtained Mark</th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (int i = 0; i < student.Modules.Count; i++)
                        {
                            var index = i;
                            var add = student.Modules[i];
                            <tr>
                                <td>@(i + 1)</td>
                                <td><InputText class="form-control" id="name" @bind-Value="@add.ModuleName" /></td>
                                <td>
                                    <InputNumber class="form-control" id="name" @bind-Value="@add.ObtainedMark" />
                                </td>
                                <td>
                                    <button @onclick="@(()=>student.Modules.RemoveAt(index))" type="button" class="btn btn-outline-danger btn-sm">Remove</button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</EditForm>
@code {
    [Parameter]
    public Student student { get; set; }
    [Parameter]
    public EventCallback OnValidSubmit { get; set; }

    async Task OnFileChange(InputFileChangeEventArgs e)
    {
        var format = "image/png";
        var resizedImage = await e.File.RequestImageFileAsync(format, 1060, 1060);
        var buffer = new byte[resizedImage.Size];
        await resizedImage.OpenReadStream().ReadAsync(buffer);
        student.ImageUrl = $"data:{format};base64,{Convert.ToBase64String(buffer)}";
    }

    private void Clear()
    {
        student = new Student();
    }
}
